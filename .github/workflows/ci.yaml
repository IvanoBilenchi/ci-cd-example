name: CI pipeline

on: [push]

env:
  build_dir: build

jobs:

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
      - name: Run clang-tidy
        run: clang-tidy src/*.c test/*.c --warnings-as-errors='*' -- -Iinclude

  test:
    name: Test
    strategy:
      matrix:
        os:
          - name: ubuntu
            cflags: -Werror -fsanitize=address
            lflags: -fsanitize=address
          - name: windows
            cflags: /WX
            exe_prefix: Debug/
          - name: macos
            cflags: -Werror -fsanitize=address
            lflags: -fsanitize=address
    runs-on: ${{matrix.os.name}}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure
        run: >
          cmake -B ${{env.build_dir}}
          -DCMAKE_C_FLAGS='${{matrix.os.cflags}}'
          -DCMAKE_EXE_LINKER_FLAGS='${{matrix.os.lflags}}'
      - name: Build
        run: cmake --build ${{env.build_dir}}
      - name: Test
        run: ${{env.build_dir}}/${{matrix.os.exe_prefix}}mylib-test

  release:
    name: Release
    needs: [analyze, test]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    strategy:
      matrix:
        os:
          - name: ubuntu
            lib_in: mylib.a
            lib_out: mylib-linux.a
          - name: windows
            lib_in: Release/mylib.lib
            lib_out: mylib-windows.lib
          - name: macos
            lib_in: mylib.a
            lib_out: mylib-macos.a
    runs-on: ${{matrix.os.name}}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure
        run: cmake -B ${{env.build_dir}} -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build ${{env.build_dir}} --config Release
      - name: Rename
        run: mv ${{env.build_dir}}/${{matrix.os.lib_in}} ${{env.build_dir}}/${{matrix.os.lib_out}}
        shell: bash
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{env.build_dir}}/${{matrix.os.lib_out}}
